<script src="https://js.pusher.com/8.0.1/pusher.min.js"></script>
<script>
	function getBaseUrl() {
return window.location.protocol + '//' + window.location.host + '/';
}

const PUSHER_APP_KEY = "{{ pusher_app_key }}";
const PUSHER_CLUSTER = "{{ pusher_cluster }}";
const CHANNEL_NAME = "{{ pusher_channel }}";

let pusher = null;

function buildQueryString(data) {
const params = new URLSearchParams();
for (const key in data) {
if (data.hasOwnProperty(key)) {
const value = (typeof data[key] === 'object' && data[key] !== null) ? JSON.stringify(data[key]) : data[key];
params.append(key, value);
}
}
return '?' + params.toString();
}

function handleEvent(eventName, data) {
console.log(eventName);
console.log(data);

const finalUrl = getBaseUrl() + eventName + buildQueryString(data);
console.log(`Event triggered! Redirecting to: ${finalUrl}`);
window.location.href = finalUrl;
}

function initializePusher() {
Pusher.logToConsole = true;
const pusher = new Pusher(PUSHER_APP_KEY, {
cluster: PUSHER_CLUSTER,
forceTLS: true
});

pusher.connection.bind('state_change', (states) => {});

pusher.connection.bind('error', (err) => {
if (err.error.data.code === 4004) {
console.error("Pusher error: App key is invalid or unknown.");
} else {
console.error("Pusher connection error:", err);
}
});

const channel = pusher.subscribe(CHANNEL_NAME);

channel.bind_global(function (eventName, data) {
if (eventName.startsWith('pusher:')) { // console.log(`Ignoring internal Pusher event: ${eventName}`);
return;
}

handleEvent(eventName, data);
});
channel.bind('pusher:subscription_error', (status) => {});
}
document.addEventListener('DOMContentLoaded', initializePusher);
</script>
